{"mappings":";;;;;;AAMA,IAAMA,cAAgB,CAEpBC,QAAS,OACTC,WAAY,uBACZC,cAAe,yBACfC,gBAAiB,sBACjBC,cAAe,aACfC,gBAAiB,0BAGjBC,KAAA,WACEC,KAAKC,OAASD,KAAKE,uBACnBF,KAAKG,iBAIHD,6BACF,YAAmC,IAAxBE,OAAOC,cAC0C,OAAtDD,OAAOC,aAAaC,QAAQN,KAAKF,iBAC5BM,OAAOC,aAAaC,QAAQN,KAAKF,iBAGrCE,KAAKP,SAIVc,0BACF,OAAOH,OAAOI,WAAW,gCAAgCC,QACrD,OACA,SAINN,cAAA,sBACkBO,SAASC,iBAAiBX,KAAKL,eACvCiB,SAAQ,SAACC,WACfA,EAAOC,iBACL,SACA,SAACC,GACCA,EAAMC,iBAENC,EAAKhB,OAASY,EAAOK,aAAaD,EAAKrB,iBAEvCc,SAASS,cAAcF,EAAKvB,YAAY0B,gBAAgB,WAE1D,OAMFnB,WAAOA,GACK,QAAVA,EAC0B,QAA5BD,KAAKO,oBACAP,KAAKP,QAAU,OACfO,KAAKP,QAAU,QACD,QAAVQ,GAA8B,SAAVA,IAC7BD,KAAKP,QAAUQ,GAEjBD,KAAKqB,cACLrB,KAAKsB,wBAIHrB,aACF,OAAOD,KAAKP,SAId4B,YAAA,WACEX,SACGS,cAAc,QACdI,aAAavB,KAAKH,cAAeG,KAAKC,SAI3CqB,qBAAA,gBACqC,IAAxBlB,OAAOC,cAChBD,OAAOC,aAAamB,QAAQxB,KAAKF,gBAAiBE,KAAKC,UAM7DT,cAAcO","sources":["src/minimal-theme-switcher.js"],"sourcesContent":["/*!\n * Minimal theme switcher\n *\n * Pico.css - https://picocss.com\n * Copyright 2019-2022 - Licensed under MIT\n */\nconst themeSwitcher = {\n  // Config\n  _scheme: \"auto\",\n  menuTarget: \"details[role='list']\",\n  buttonsTarget: \"a[data-theme-switcher]\",\n  buttonAttribute: \"data-theme-switcher\",\n  rootAttribute: \"data-theme\",\n  localStorageKey: \"picoPreferedColorScheme\",\n\n  // Init\n  init() {\n    this.scheme = this.schemeFromLocalStorage;\n    this.initSwitchers();\n  },\n\n  // Get color scheme from local storage\n  get schemeFromLocalStorage() {\n    if (typeof window.localStorage !== \"undefined\") {\n      if (window.localStorage.getItem(this.localStorageKey) !== null) {\n        return window.localStorage.getItem(this.localStorageKey);\n      }\n    }\n    return this._scheme;\n  },\n\n  // Prefered color scheme\n  get preferedColorScheme() {\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? \"dark\"\n      : \"light\";\n  },\n\n  // Init switchers\n  initSwitchers() {\n    const buttons = document.querySelectorAll(this.buttonsTarget);\n    buttons.forEach((button) => {\n      button.addEventListener(\n        \"click\",\n        (event) => {\n          event.preventDefault();\n          // Set scheme\n          this.scheme = button.getAttribute(this.buttonAttribute);\n          // Close dropdown\n          document.querySelector(this.menuTarget).removeAttribute(\"open\");\n        },\n        false\n      );\n    });\n  },\n\n  // Set scheme\n  set scheme(scheme) {\n    if (scheme == \"auto\") {\n      this.preferedColorScheme == \"dark\"\n        ? (this._scheme = \"dark\")\n        : (this._scheme = \"light\");\n    } else if (scheme == \"dark\" || scheme == \"light\") {\n      this._scheme = scheme;\n    }\n    this.applyScheme();\n    this.schemeToLocalStorage();\n  },\n\n  // Get scheme\n  get scheme() {\n    return this._scheme;\n  },\n\n  // Apply scheme\n  applyScheme() {\n    document\n      .querySelector(\"html\")\n      .setAttribute(this.rootAttribute, this.scheme);\n  },\n\n  // Store scheme to local storage\n  schemeToLocalStorage() {\n    if (typeof window.localStorage !== \"undefined\") {\n      window.localStorage.setItem(this.localStorageKey, this.scheme);\n    }\n  },\n};\n\n// Init\nthemeSwitcher.init();\n"],"names":["themeSwitcher","_scheme","menuTarget","buttonsTarget","buttonAttribute","rootAttribute","localStorageKey","init","this","scheme","schemeFromLocalStorage","initSwitchers","window","localStorage","getItem","preferedColorScheme","matchMedia","matches","document","querySelectorAll","forEach","button","addEventListener","event","preventDefault","_this1","getAttribute","querySelector","removeAttribute","applyScheme","schemeToLocalStorage","setAttribute","setItem"],"version":3,"file":"index.a9b9c24c.js.map"}